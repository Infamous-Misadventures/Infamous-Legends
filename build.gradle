buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        jcenter()
        mavenCentral()
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.logging.log4j' }
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.apache.logging.log4j:log4j-api:2.11.2'
        classpath 'org.apache.logging.log4j:log4j-core:2.11.2'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

mixin {
    add sourceSets.main, "${modid}.refmap.json"

    config "${modid}.mixins.json"
}

processResources {
    duplicatesStrategy = 'exclude'
}

dependencies {

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

version = '1.0'
group = "com.infamous.${modid}"
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: "parchment", version:"${parchment_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'infamous_legends'

            mods {
                infamous_legends {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'infamous_legends'

            mods {
                infamous_legends {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'infamous_legends'

            mods {
                infamous_legends {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'infamous_legends', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                infamous_legends {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "CurseForge Maven" //Base
		url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
	}
    maven {
        name = "Architectury Maven" //Architectury
        url "https://maven.architectury.dev/"
    }
    maven {
        name = "GeckoLib Maven" //Geckolib
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "IllusiveC4 Maven" //Curios
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "Progwml6 maven" //JEI
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    flatDir {
        dirs 'mods'
    }
}
	
dependencies {
    //Base
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    

    //Libraries
    implementation fg.deobf("dungeons_libraries:dungeons_libraries:${mc_version}-${libraries_version}")
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-1.19:${geckolib_version}")
    runtimeOnly    fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly    fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")

    //Extras
    runtimeOnly fg.deobf("curse.maven:mob-battle-mod-version-268746:${mob_battle_version}")
    runtimeOnly fg.deobf("curse.maven:torohealth-damage-indicators-version-245733:3895068")
    implementation fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    implementation fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${jer_version}")
    implementation fg.deobf("curse.maven:just-enough-effect-descriptions-jeed-532286:${jeed_version}")

    runtimeOnly fg.deobf("curse.maven:appleskin-248787:${appleskin_version}")

    implementation fg.deobf("curse.maven:configured-457570:${configured_version}")
    implementation fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")

    runtimeOnly fg.deobf("curse.maven:mob-battle-mod-version-268746:${mob_battle_version}")

    runtimeOnly fg.deobf("curse.maven:spark-361579:${spark_version}")
    
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Infamous Legends",
                "Specification-Vendor"    : "Infamous Mods",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Infamous Mods",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}